const int max_loop=15;
const char sym_of_fact='f',_ch1='-',_ch2='/',_ch3='a',_ch4='Z',_ch5='0';
int loop,sub_loop,func_loop,var_int1,var_int2;char var_ch1,var_ch2;
int a1[100],a2,a3[233],a4[5],a5[5],aa,a6[8],a7[2];
char ca1[100],ca2,ca3[233],ca4[5],ca5[5],cn,ca6[8],ca7[2];

int fact(int n){
  loop=loop+1;
  sub_loop=sub_loop-1;
  if(loop>max_loop)return(n);
  if(sub_loop<0)return(n);
  if(n>2)return(n*fact(n-1));
  return(n);
}

int has_re_has_var1(int var){
  func_loop=func_loop+1;
  return(var);
}

char has_re_has_var2(int var){
  func_loop=func_loop+1;
  return('a');
}

int has_re_has_vars1(int var1,char var2){
  func_loop=func_loop+1;
  return(func_loop);
}

char has_re_has_vars2(int var1,char var2){
  const int non_var1=-0,non_var2=-1;const char non_var_ch1='-',non_var_ch2='_';
  func_loop=func_loop+1;
  return(var2);
}

int has_re_non_var1(){
  func_loop=func_loop+1;
  return(1);
}

char has_re_non_var2(){
  func_loop=func_loop+1;
  return('a');
}

void non_re_has_var1(int var){
  int non_var3,non_var4;char non_var_ch3,non_var_ch4;
  func_loop=func_loop+1;
  return;
}

void non_re_has_vars1(int var1,char var2,int var3){
  func_loop=func_loop+1;
  return;
}

void non_re_non_var1(){
  const int non_var1=-0,non_var2=-1;const char non_var_ch1='-',non_var_ch2='_';
  int non_var3,non_var4;char non_var_ch3,non_var_ch4;
  func_loop=func_loop+1;
  return;
}

void non_re_non_var2(){;}

void main(){
  int str[200];
  char mult;
  int num_mult;
  int fact_num,fact_value;
  func_loop=0;
  while(func_loop<9)switch(func_loop){
    case 0:var_int1=has_re_has_var1(1);
    case 1:var_ch1=has_re_has_var2(1);
    case 2:var_int2=has_re_has_vars1(var_int1,var_ch1);
    case 3:var_ch2=has_re_has_vars2(var_int1,var_ch2);
    case 4:var_int1=has_re_non_var1();
    case 5:var_ch1=has_re_non_var2();
    case 6:non_re_has_var1(var_int2);
    case 7:non_re_has_vars(var_int1,var_ch2,var_int2);
    default:non_re_non_var1();
  }
  func_loop=0;
  while(func_loop<8){
    switch(func_loop){
      case 0:var_int1=has_re_has_var1(1);
      case 1:var_ch1=has_re_has_var2(1);
      case 2:var_int2=has_re_has_vars1(var_int1,var_ch1);
      case 3:var_ch2=has_re_has_vars2(var_int1,var_ch2);
      case 4:var_int1=has_re_non_var1();
      case 5:var_ch1=has_re_non_var2();
      case 6:non_re_has_var1(var_int2);
      case 7:non_re_has_vars(var_int1,var_ch2,var_int2);
      default:;
    }
  }
  non_re_non_var2();
  if(1<2)var_ch1='1';
  if(2>0)var_ch2='+';
  if(4!=3)var_ch1='*';
  var_ch2='_';
  var_ch1=var_ch2;
  if(+-0==-+0)var_int1=-0;
  var_int1=+0;
  var_int1=-2333;
  var_int1=+666;
  var_int1=0;
  var_int1=2147483647;
  var_int2=var_int1;
  mult='*';
  num_mult=0;
  num_mult=mult;
  if(num_mult==0)printf("Error!It can't deal with char-to-calculating!");
  num_mult=42;
  while(num_mult<100)num_mult=num_mult+1;
  str[0]=num_mult;
  str[num_mult]=num_mult+1;
  var_int2=str[num_mult];
  var_int1=(str[num_mult]+var_int2)*3;
  printf("Please input three number randomly to test scanf.");
  scanf(var_int1,var_int2,var_int3);
  printf("Please input the factorial number no more than 15 and no less than 0.");
  scanf(fact_num);
  fact_value=0;
  loop=0;
  sub_loop=fact_num+1;
  if(fact_num>=0){
    if(fact_num<=max_loop)fact_value=fact(fact_num); 
  }
  if(fact_num>max_loop)printf("Overflow!");
  if(fact_num<0)printf("Too low!");
  printf("Result=",fact_value);
  return;
}