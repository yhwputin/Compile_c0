1 CONSY const
2 INTSY int
3 IDENSY max_loop
4 ASSIGNSY =
5 INT2SY 15
6 SEMISY ;
7 CONSY const
8 CHARSY char
9 IDENSY sym_of_fact
10 ASSIGNSY =
11 APOSY '
12 CHAR2SY f
13 APOSY '
14 COMMASY ,
15 IDENSY _ch1
16 ASSIGNSY =
17 APOSY '
18 CHAR2SY -
19 APOSY '
20 COMMASY ,
21 IDENSY _ch2
22 ASSIGNSY =
23 APOSY '
24 CHAR2SY /
25 APOSY '
26 COMMASY ,
27 IDENSY _ch3
28 ASSIGNSY =
29 APOSY '
30 CHAR2SY a
31 APOSY '
32 COMMASY ,
33 IDENSY _ch4
34 ASSIGNSY =
35 APOSY '
36 CHAR2SY Z
37 APOSY '
38 COMMASY ,
39 IDENSY _ch5
40 ASSIGNSY =
41 APOSY '
42 CHAR2SY 0
43 APOSY '
44 SEMISY ;
45 INTSY int
46 IDENSY loop
47 COMMASY ,
48 IDENSY loop
49 COMMASY ,
50 IDENSY sub_loop
51 COMMASY ,
52 IDENSY func_loop
53 COMMASY ,
54 IDENSY var_int1
55 COMMASY ,
56 IDENSY var_int2
57 SEMISY ;
58 CHARSY char
59 IDENSY var_ch1
60 COMMASY ,
61 IDENSY var_ch1
62 COMMASY ,
63 IDENSY var_ch2
64 SEMISY ;
65 INTSY int
66 IDENSY a1
67 LBRASY [
68 IDENSY a1
69 LBRASY [
70 INT2SY 100
71 RBRASY ]
72 COMMASY ,
73 IDENSY a2
74 COMMASY ,
75 IDENSY a3
76 LBRASY [
77 INT2SY 233
78 RBRASY ]
79 COMMASY ,
80 IDENSY a4
81 LBRASY [
82 INT2SY 5
83 RBRASY ]
84 COMMASY ,
85 IDENSY a5
86 LBRASY [
87 INT2SY 5
88 RBRASY ]
89 COMMASY ,
90 IDENSY aa
91 COMMASY ,
92 IDENSY a6
93 LBRASY [
94 INT2SY 8
95 RBRASY ]
96 COMMASY ,
97 IDENSY a7
98 LBRASY [
99 INT2SY 2
100 RBRASY ]
101 SEMISY ;
102 CHARSY char
103 IDENSY ca1
104 LBRASY [
105 IDENSY ca1
106 LBRASY [
107 INT2SY 100
108 RBRASY ]
109 COMMASY ,
110 IDENSY ca2
111 COMMASY ,
112 IDENSY ca3
113 LBRASY [
114 INT2SY 233
115 RBRASY ]
116 COMMASY ,
117 IDENSY ca4
118 LBRASY [
119 INT2SY 5
120 RBRASY ]
121 COMMASY ,
122 IDENSY ca5
123 LBRASY [
124 INT2SY 5
125 RBRASY ]
126 COMMASY ,
127 IDENSY cn
128 COMMASY ,
129 IDENSY ca6
130 LBRASY [
131 INT2SY 8
132 RBRASY ]
133 COMMASY ,
134 IDENSY ca7
135 LBRASY [
136 INT2SY 2
137 RBRASY ]
138 SEMISY ;
139 INTSY int
140 IDENSY fact
141 LPARSY (
142 IDENSY fact
143 LPARSY (
144 INTSY int
145 IDENSY n
146 RPARSY )
147 LBPARSY {
148 IDENSY loop
149 ASSIGNSY =
150 ASSIGNSY =
151 IDENSY loop
152 PLUSSY +
153 INT2SY 1
154 SEMISY ;
155 IDENSY sub_loop
156 ASSIGNSY =
157 ASSIGNSY =
158 IDENSY sub_loop
159 MINUSSY -
160 INT2SY 1
161 SEMISY ;
162 IFSY if
163 LPARSY (
164 IDENSY loop
165 MOSY >
166 IDENSY max_loop
167 RPARSY )
168 RETURNSY return
169 LPARSY (
170 IDENSY n
171 RPARSY )
172 SEMISY ;
173 IFSY if
174 LPARSY (
175 IDENSY sub_loop
176 LESY <
177 INT2SY 0
178 RPARSY )
179 RETURNSY return
180 LPARSY (
181 IDENSY n
182 RPARSY )
183 SEMISY ;
184 IFSY if
185 LPARSY (
186 IDENSY n
187 MOSY >
188 INT2SY 2
189 RPARSY )
190 RETURNSY return
191 LPARSY (
192 IDENSY n
193 MULTSY *
194 IDENSY fact
195 LPARSY (
196 LPARSY (
197 IDENSY n
198 MINUSSY -
199 INT2SY 1
200 RPARSY )
201 RPARSY )
202 SEMISY ;
203 RETURNSY return
204 LPARSY (
205 IDENSY n
206 RPARSY )
207 SEMISY ;
208 RBPARSY }
209 INTSY int
210 IDENSY has_re_has_var1
211 LPARSY (
212 INTSY int
213 IDENSY var
214 RPARSY )
215 LBPARSY {
216 IDENSY func_loop
217 ASSIGNSY =
218 ASSIGNSY =
219 IDENSY func_loop
220 PLUSSY +
221 INT2SY 1
222 SEMISY ;
223 RETURNSY return
224 LPARSY (
225 IDENSY var
226 RPARSY )
227 SEMISY ;
228 RBPARSY }
229 CHARSY char
230 IDENSY has_re_has_var2
231 LPARSY (
232 INTSY int
233 IDENSY var
234 RPARSY )
235 LBPARSY {
236 IDENSY func_loop
237 ASSIGNSY =
238 ASSIGNSY =
239 IDENSY func_loop
240 PLUSSY +
241 INT2SY 1
242 SEMISY ;
243 RETURNSY return
244 LPARSY (
245 APOSY '
246 CHAR2SY a
247 APOSY '
248 RPARSY )
249 SEMISY ;
250 RBPARSY }
251 INTSY int
252 IDENSY has_re_has_vars1
253 LPARSY (
254 INTSY int
255 IDENSY var1
256 COMMASY ,
257 CHARSY char
258 IDENSY var2
259 RPARSY )
260 LBPARSY {
261 IDENSY func_loop
262 ASSIGNSY =
263 ASSIGNSY =
264 IDENSY func_loop
265 PLUSSY +
266 INT2SY 1
267 SEMISY ;
268 RETURNSY return
269 LPARSY (
270 IDENSY func_loop
271 RPARSY )
272 SEMISY ;
273 RBPARSY }
274 CHARSY char
275 IDENSY has_re_has_vars2
276 LPARSY (
277 INTSY int
278 IDENSY var1
279 COMMASY ,
280 CHARSY char
281 IDENSY var2
282 RPARSY )
283 LBPARSY {
284 CONSY const
285 INTSY int
286 IDENSY non_var1
287 ASSIGNSY =
288 MINUSSY -
289 INT2SY 0
290 COMMASY ,
291 IDENSY non_var2
292 ASSIGNSY =
293 MINUSSY -
294 INT2SY 1
295 SEMISY ;
296 CONSY const
297 CHARSY char
298 IDENSY non_var_ch1
299 ASSIGNSY =
300 APOSY '
301 CHAR2SY -
302 APOSY '
303 COMMASY ,
304 IDENSY non_var_ch2
305 ASSIGNSY =
306 APOSY '
307 CHAR2SY _
308 APOSY '
309 SEMISY ;
310 IDENSY func_loop
311 ASSIGNSY =
312 ASSIGNSY =
313 IDENSY func_loop
314 PLUSSY +
315 INT2SY 1
316 SEMISY ;
317 RETURNSY return
318 LPARSY (
319 IDENSY var2
320 RPARSY )
321 SEMISY ;
322 RBPARSY }
323 INTSY int
324 IDENSY has_re_non_var1
325 LPARSY (
326 RPARSY )
327 LBPARSY {
328 IDENSY func_loop
329 ASSIGNSY =
330 ASSIGNSY =
331 IDENSY func_loop
332 PLUSSY +
333 INT2SY 1
334 SEMISY ;
335 RETURNSY return
336 LPARSY (
337 INT2SY 1
338 RPARSY )
339 SEMISY ;
340 RBPARSY }
341 CHARSY char
342 IDENSY has_re_non_var2
343 LPARSY (
344 RPARSY )
345 LBPARSY {
346 IDENSY func_loop
347 ASSIGNSY =
348 ASSIGNSY =
349 IDENSY func_loop
350 PLUSSY +
351 INT2SY 1
352 SEMISY ;
353 RETURNSY return
354 LPARSY (
355 APOSY '
356 CHAR2SY a
357 APOSY '
358 RPARSY )
359 SEMISY ;
360 RBPARSY }
361 VOIDSY void
362 IDENSY non_re_has_var1
363 IDENSY non_re_has_var1
364 LPARSY (
365 INTSY int
366 IDENSY var
367 RPARSY )
368 LBPARSY {
369 INTSY int
370 IDENSY non_var3
371 COMMASY ,
372 IDENSY non_var4
373 SEMISY ;
374 CHARSY char
375 IDENSY non_var_ch3
376 COMMASY ,
377 IDENSY non_var_ch4
378 SEMISY ;
379 IDENSY func_loop
380 ASSIGNSY =
381 ASSIGNSY =
382 IDENSY func_loop
383 PLUSSY +
384 INT2SY 1
385 SEMISY ;
386 RETURNSY return
387 SEMISY ;
388 RBPARSY }
389 VOIDSY void
390 IDENSY non_re_has_vars1
391 IDENSY non_re_has_vars1
392 LPARSY (
393 INTSY int
394 IDENSY var1
395 COMMASY ,
396 CHARSY char
397 IDENSY var2
398 COMMASY ,
399 INTSY int
400 IDENSY var3
401 RPARSY )
402 LBPARSY {
403 IDENSY func_loop
404 ASSIGNSY =
405 ASSIGNSY =
406 IDENSY func_loop
407 PLUSSY +
408 INT2SY 1
409 SEMISY ;
410 RETURNSY return
411 SEMISY ;
412 RBPARSY }
413 VOIDSY void
414 IDENSY non_re_non_var1
415 IDENSY non_re_non_var1
416 LPARSY (
417 RPARSY )
418 LBPARSY {
419 CONSY const
420 INTSY int
421 IDENSY non_var1
422 ASSIGNSY =
423 MINUSSY -
424 INT2SY 0
425 COMMASY ,
426 IDENSY non_var2
427 ASSIGNSY =
428 MINUSSY -
429 INT2SY 1
430 SEMISY ;
431 CONSY const
432 CHARSY char
433 IDENSY non_var_ch1
434 ASSIGNSY =
435 APOSY '
436 CHAR2SY -
437 APOSY '
438 COMMASY ,
439 IDENSY non_var_ch2
440 ASSIGNSY =
441 APOSY '
442 CHAR2SY _
443 APOSY '
444 SEMISY ;
445 INTSY int
446 IDENSY non_var3
447 COMMASY ,
448 IDENSY non_var4
449 SEMISY ;
450 CHARSY char
451 IDENSY non_var_ch3
452 COMMASY ,
453 IDENSY non_var_ch4
454 SEMISY ;
455 IDENSY func_loop
456 ASSIGNSY =
457 ASSIGNSY =
458 IDENSY func_loop
459 PLUSSY +
460 INT2SY 1
461 SEMISY ;
462 RETURNSY return
463 SEMISY ;
464 RBPARSY }
465 VOIDSY void
466 IDENSY non_re_non_var2
467 IDENSY non_re_non_var2
468 LPARSY (
469 RPARSY )
470 LBPARSY {
471 SEMISY ;
472 RBPARSY }
473 VOIDSY void
474 MAINSY main
475 MAINSY main
476 LPARSY (
477 RPARSY )
478 LBPARSY {
479 INTSY int
480 IDENSY str
481 LBRASY [
482 INT2SY 200
483 RBRASY ]
484 SEMISY ;
485 CHARSY char
486 IDENSY mult
487 SEMISY ;
488 INTSY int
489 IDENSY num_mult
490 SEMISY ;
491 INTSY int
492 IDENSY fact_num
493 COMMASY ,
494 IDENSY fact_value
495 SEMISY ;
496 IDENSY func_loop
497 ASSIGNSY =
498 ASSIGNSY =
499 INT2SY 0
500 SEMISY ;
501 WHILESY while
502 LPARSY (
503 IDENSY func_loop
504 LESY <
505 INT2SY 9
506 RPARSY )
507 SWITCHSY switch
508 LPARSY (
509 IDENSY func_loop
510 RPARSY )
511 LBPARSY {
512 CASESY case
513 INT2SY 0
514 COLONSY :
515 IDENSY var_int1
516 ASSIGNSY =
517 ASSIGNSY =
518 IDENSY has_re_has_var1
519 LPARSY (
520 LPARSY (
521 INT2SY 1
522 RPARSY )
523 SEMISY ;
524 CASESY case
525 INT2SY 1
526 COLONSY :
527 IDENSY var_ch1
528 ASSIGNSY =
529 ASSIGNSY =
530 IDENSY has_re_has_var2
531 LPARSY (
532 LPARSY (
533 INT2SY 1
534 RPARSY )
535 SEMISY ;
536 CASESY case
537 INT2SY 2
538 COLONSY :
539 IDENSY var_int2
540 ASSIGNSY =
541 ASSIGNSY =
542 IDENSY has_re_has_vars1
543 LPARSY (
544 LPARSY (
545 IDENSY var_int1
546 COMMASY ,
547 IDENSY var_ch1
548 RPARSY )
549 SEMISY ;
550 CASESY case
551 INT2SY 3
552 COLONSY :
553 IDENSY var_ch2
554 ASSIGNSY =
555 ASSIGNSY =
556 IDENSY has_re_has_vars2
557 LPARSY (
558 LPARSY (
559 IDENSY var_int1
560 COMMASY ,
561 IDENSY var_ch2
562 RPARSY )
563 SEMISY ;
564 CASESY case
565 INT2SY 4
566 COLONSY :
567 IDENSY var_int1
568 ASSIGNSY =
569 ASSIGNSY =
570 IDENSY has_re_non_var1
571 LPARSY (
572 LPARSY (
573 RPARSY )
574 SEMISY ;
575 CASESY case
576 INT2SY 5
577 COLONSY :
578 IDENSY var_ch1
579 ASSIGNSY =
580 ASSIGNSY =
581 IDENSY has_re_non_var2
582 LPARSY (
583 LPARSY (
584 RPARSY )
585 SEMISY ;
586 CASESY case
587 INT2SY 6
588 COLONSY :
589 IDENSY non_re_has_var1
590 LPARSY (
591 LPARSY (
592 IDENSY var_int2
593 RPARSY )
594 SEMISY ;
595 CASESY case
596 INT2SY 7
597 COLONSY :
598 IDENSY non_re_has_vars
599 LPARSY (
600 LPARSY (
601 IDENSY var_int1
602 COMMASY ,
603 IDENSY var_ch2
604 COMMASY ,
605 IDENSY var_int2
606 RPARSY )
607 SEMISY ;
608 DEFAULTSY default
609 COLONSY :
610 IDENSY non_re_non_var1
611 LPARSY (
612 LPARSY (
613 RPARSY )
614 SEMISY ;
615 RBPARSY }
616 IDENSY func_loop
617 ASSIGNSY =
618 ASSIGNSY =
619 INT2SY 0
620 SEMISY ;
621 WHILESY while
622 LPARSY (
623 IDENSY func_loop
624 LESY <
625 INT2SY 8
626 RPARSY )
627 LBPARSY {
628 SWITCHSY switch
629 LPARSY (
630 IDENSY func_loop
631 RPARSY )
632 LBPARSY {
633 CASESY case
634 INT2SY 0
635 COLONSY :
636 IDENSY var_int1
637 ASSIGNSY =
638 ASSIGNSY =
639 IDENSY has_re_has_var1
640 LPARSY (
641 LPARSY (
642 INT2SY 1
643 RPARSY )
644 SEMISY ;
645 CASESY case
646 INT2SY 1
647 COLONSY :
648 IDENSY var_ch1
649 ASSIGNSY =
650 ASSIGNSY =
651 IDENSY has_re_has_var2
652 LPARSY (
653 LPARSY (
654 INT2SY 1
655 RPARSY )
656 SEMISY ;
657 CASESY case
658 INT2SY 2
659 COLONSY :
660 IDENSY var_int2
661 ASSIGNSY =
662 ASSIGNSY =
663 IDENSY has_re_has_vars1
664 LPARSY (
665 LPARSY (
666 IDENSY var_int1
667 COMMASY ,
668 IDENSY var_ch1
669 RPARSY )
670 SEMISY ;
671 CASESY case
672 INT2SY 3
673 COLONSY :
674 IDENSY var_ch2
675 ASSIGNSY =
676 ASSIGNSY =
677 IDENSY has_re_has_vars2
678 LPARSY (
679 LPARSY (
680 IDENSY var_int1
681 COMMASY ,
682 IDENSY var_ch2
683 RPARSY )
684 SEMISY ;
685 CASESY case
686 INT2SY 4
687 COLONSY :
688 IDENSY var_int1
689 ASSIGNSY =
690 ASSIGNSY =
691 IDENSY has_re_non_var1
692 LPARSY (
693 LPARSY (
694 RPARSY )
695 SEMISY ;
696 CASESY case
697 INT2SY 5
698 COLONSY :
699 IDENSY var_ch1
700 ASSIGNSY =
701 ASSIGNSY =
702 IDENSY has_re_non_var2
703 LPARSY (
704 LPARSY (
705 RPARSY )
706 SEMISY ;
707 CASESY case
708 INT2SY 6
709 COLONSY :
710 IDENSY non_re_has_var1
711 LPARSY (
712 LPARSY (
713 IDENSY var_int2
714 RPARSY )
715 SEMISY ;
716 CASESY case
717 INT2SY 7
718 COLONSY :
719 IDENSY non_re_has_vars
720 LPARSY (
721 LPARSY (
722 IDENSY var_int1
723 COMMASY ,
724 IDENSY var_ch2
725 COMMASY ,
726 IDENSY var_int2
727 RPARSY )
728 SEMISY ;
729 DEFAULTSY default
730 COLONSY :
731 SEMISY ;
732 RBPARSY }
733 RBPARSY }
734 IDENSY non_re_non_var2
735 LPARSY (
736 LPARSY (
737 RPARSY )
738 SEMISY ;
739 IFSY if
740 LPARSY (
741 INT2SY 1
742 LESY <
743 INT2SY 2
744 RPARSY )
745 IDENSY var_ch1
746 ASSIGNSY =
747 ASSIGNSY =
748 APOSY '
749 CHAR2SY 1
750 APOSY '
751 SEMISY ;
752 IFSY if
753 LPARSY (
754 INT2SY 2
755 MOSY >
756 INT2SY 0
757 RPARSY )
758 IDENSY var_ch2
759 ASSIGNSY =
760 ASSIGNSY =
761 APOSY '
762 CHAR2SY +
763 APOSY '
764 SEMISY ;
765 IFSY if
766 LPARSY (
767 INT2SY 4
768 NEQSY !=
769 INT2SY 3
770 RPARSY )
771 IDENSY var_ch1
772 ASSIGNSY =
773 ASSIGNSY =
774 APOSY '
775 CHAR2SY *
776 APOSY '
777 SEMISY ;
778 IDENSY var_ch2
779 ASSIGNSY =
780 ASSIGNSY =
781 APOSY '
782 CHAR2SY _
783 APOSY '
784 SEMISY ;
785 IDENSY var_ch1
786 ASSIGNSY =
787 ASSIGNSY =
788 IDENSY var_ch2
789 SEMISY ;
790 IFSY if
791 LPARSY (
792 PLUSSY +
793 MINUSSY -
794 INT2SY 0
795 EQSY ==
796 MINUSSY -
797 PLUSSY +
798 INT2SY 0
799 RPARSY )
800 IDENSY var_int1
801 ASSIGNSY =
802 ASSIGNSY =
803 MINUSSY -
804 INT2SY 0
805 SEMISY ;
806 IDENSY var_int1
807 ASSIGNSY =
808 ASSIGNSY =
809 PLUSSY +
810 INT2SY 0
811 SEMISY ;
812 IDENSY var_int1
813 ASSIGNSY =
814 ASSIGNSY =
815 MINUSSY -
816 INT2SY 2333
817 SEMISY ;
818 IDENSY var_int1
819 ASSIGNSY =
820 ASSIGNSY =
821 PLUSSY +
822 INT2SY 666
823 SEMISY ;
824 IDENSY var_int1
825 ASSIGNSY =
826 ASSIGNSY =
827 INT2SY 0
828 SEMISY ;
829 IDENSY var_int1
830 ASSIGNSY =
831 ASSIGNSY =
832 INT2SY 2147483647
833 SEMISY ;
834 IDENSY var_int2
835 ASSIGNSY =
836 ASSIGNSY =
837 IDENSY var_int1
838 SEMISY ;
839 IDENSY mult
840 ASSIGNSY =
841 ASSIGNSY =
842 APOSY '
843 CHAR2SY *
844 APOSY '
845 SEMISY ;
846 IDENSY num_mult
847 ASSIGNSY =
848 ASSIGNSY =
849 INT2SY 0
850 SEMISY ;
851 IDENSY num_mult
852 ASSIGNSY =
853 ASSIGNSY =
854 IDENSY mult
855 SEMISY ;
856 IFSY if
857 LPARSY (
858 IDENSY num_mult
859 EQSY ==
860 INT2SY 0
861 RPARSY )
862 PRINTFSY printf
863 LPARSY (
864 DQUOSY "
865 CHAR2SY Error!It can't deal with char-to-calculating!
866 DQUOSY "
867 RPARSY )
868 SEMISY ;
869 IDENSY num_mult
870 ASSIGNSY =
871 ASSIGNSY =
872 INT2SY 42
873 SEMISY ;
874 WHILESY while
875 LPARSY (
876 IDENSY num_mult
877 LESY <
878 INT2SY 100
879 RPARSY )
880 IDENSY num_mult
881 ASSIGNSY =
882 ASSIGNSY =
883 IDENSY num_mult
884 PLUSSY +
885 INT2SY 1
886 SEMISY ;
887 IDENSY str
888 LBRASY [
889 LBRASY [
890 INT2SY 0
891 RBRASY ]
892 ASSIGNSY =
893 IDENSY num_mult
894 SEMISY ;
895 IDENSY str
896 LBRASY [
897 LBRASY [
898 IDENSY num_mult
899 RBRASY ]
900 ASSIGNSY =
901 IDENSY num_mult
902 PLUSSY +
903 INT2SY 1
904 SEMISY ;
905 IDENSY var_int2
906 ASSIGNSY =
907 ASSIGNSY =
908 IDENSY str
909 LBRASY [
910 IDENSY num_mult
911 RBRASY ]
912 SEMISY ;
913 IDENSY var_int1
914 ASSIGNSY =
915 ASSIGNSY =
916 LPARSY (
917 IDENSY str
918 LBRASY [
919 IDENSY num_mult
920 RBRASY ]
921 PLUSSY +
922 IDENSY var_int2
923 RPARSY )
924 MULTSY *
925 INT2SY 3
926 SEMISY ;
927 PRINTFSY printf
928 LPARSY (
929 DQUOSY "
930 CHAR2SY Please input three number randomly to test scanf.
931 DQUOSY "
932 RPARSY )
933 SEMISY ;
934 SCANFSY scanf
935 LPARSY (
936 IDENSY var_int1
937 COMMASY ,
938 IDENSY var_int2
939 COMMASY ,
940 IDENSY var_int3
941 RPARSY )
942 SEMISY ;
943 PRINTFSY printf
944 LPARSY (
945 DQUOSY "
946 CHAR2SY Please input the factorial number no more than 15 and no less than 0.
947 DQUOSY "
948 RPARSY )
949 SEMISY ;
950 SCANFSY scanf
951 LPARSY (
952 IDENSY fact_num
953 RPARSY )
954 SEMISY ;
955 IDENSY fact_value
956 ASSIGNSY =
957 ASSIGNSY =
958 INT2SY 0
959 SEMISY ;
960 IDENSY loop
961 ASSIGNSY =
962 ASSIGNSY =
963 INT2SY 0
964 SEMISY ;
965 IDENSY sub_loop
966 ASSIGNSY =
967 ASSIGNSY =
968 IDENSY fact_num
969 PLUSSY +
970 INT2SY 1
971 SEMISY ;
972 IFSY if
973 LPARSY (
974 IDENSY fact_num
975 MOEQSY >=
976 INT2SY 0
977 RPARSY )
978 LBPARSY {
979 IFSY if
980 LPARSY (
981 IDENSY fact_num
982 LEEQSY <=
983 IDENSY max_loop
984 RPARSY )
985 IDENSY fact_value
986 ASSIGNSY =
987 ASSIGNSY =
988 IDENSY fact
989 LPARSY (
990 LPARSY (
991 IDENSY fact_num
992 RPARSY )
993 SEMISY ;
994 RBPARSY }
995 IFSY if
996 LPARSY (
997 IDENSY fact_num
998 MOSY >
999 IDENSY max_loop
1000 RPARSY )
1001 PRINTFSY printf
1002 LPARSY (
1003 DQUOSY "
1004 CHAR2SY Overflow!
1005 DQUOSY "
1006 RPARSY )
1007 SEMISY ;
1008 IFSY if
1009 LPARSY (
1010 IDENSY fact_num
1011 LESY <
1012 INT2SY 0
1013 RPARSY )
1014 PRINTFSY printf
1015 LPARSY (
1016 DQUOSY "
1017 CHAR2SY Too low!
1018 DQUOSY "
1019 RPARSY )
1020 SEMISY ;
1021 PRINTFSY printf
1022 LPARSY (
1023 DQUOSY "
1024 CHAR2SY Result=
1025 DQUOSY "
1026 COMMASY ,
1027 IDENSY fact_value
1028 RPARSY )
1029 SEMISY ;
1030 RETURNSY return
1031 SEMISY ;
1032 RBPARSY }
